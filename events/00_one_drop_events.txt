namespace = one_drop

character_event = { # Fires for women who're carrying a tracked child and calculates what percentage of the child's blood will be the progenitor's
	id = one_drop.1
	hide_window = yes
	is_triggered_only = yes # on_pregnancy
	
	only_women = yes
	
	trigger = {
		OR = {
			father_of_unborn = {
				OR = {
					trait = one_drop
					trait = the_source
				}
			}
			trait = one_drop
		}
	}
	
	option = {
		# Determine how much source blood: 1000 = 100%
		if = { # 1st generation bastard
			limit = { father_of_unborn = { trait = the_source } }
			set_character_flag = flag_one_drop_baby
			set_variable = { which = "p_blood_level" value = 1000 } # Straight from the tap, baby!!one
		}
		else_if = { # Father is a descendant
			limit = { father_of_unborn = { trait = one_drop } }
			if = {
				limit = { father_of_unborn = { is_alive = yes } }
				father_of_unborn = {
					set_variable = { which = "p_blood_level" which = "my_blood_level" }
					ROOT = { set_variable = { which = "p_blood_level" which = PREV } }
					set_variable = { which = "p_blood_level" value = 0 }
				}
			}
			else = {
				set_variable = { which = "p_blood_level" value = 10 } # Dead fathers will not contain any variable info so assume 1%
			}
		}
		else = {
			set_variable = { which = "p_blood_level" value = 0 }
		}
		if = {
			limit = { trait = one_drop }
			if = {
				limit = { father_of_unborn = { is_alive = yes } }
				set_variable = { which = "m_blood_level" which = "my_blood_level" }
			}
			else = {
				set_variable = { which = "m_blood_level" value = 0 }
			}
		}
		# Average out the blood level for the newborn by adding the values for both parents and dividing by two
		set_variable = { which = "baby_blood_level" value = 0 }
		change_variable = { which = "baby_blood_level" which = "p_blood_level" }
		change_variable = { which = "baby_blood_level" which = "m_blood_level" }
		divide_variable = { which = "baby_blood_level" value = 2 }
		set_variable = { which = "m_blood_level" value = 0 }
		set_variable = { which = "p_blood_level" value = 0 }
	}
}

character_event = { # Set the one_drop trait for direct descendants and set the blood levels for all tracked newborns
	id = one_drop.2
	hide_window = yes
	is_triggered_only = yes # on_birth
	
	trigger = {
		OR = {
			trait = one_drop
			AND = {
				mother = { has_character_flag = flag_one_drop_baby }
				OR = {
					real_father_even_if_dead = { trait = the_source }
					AND = {
						father_even_if_dead = { trait = the_source }
						NOT = { real_father_even_if_dead = { always = yes } }
					}
				}
			}
		}
	}
	
	option = {
		mother = {
			ROOT = { 
				set_variable = { which = "baby_blood_level" which = PREV }
				set_variable = { which = "my_blood_level" which = "baby_blood_level" }
				set_variable = { which = "baby_blood_level" value = 0 }
				add_trait = one_drop
			}
		}
	}
}
character_event = { # Perform some cleanup after the birth - "cleanup the after birth "eww, gross
	id = one_drop.3
	hide_window = yes
	is_triggered_only = yes # on_post_birth - for cleanup just in case of twins
	
	trigger = {
		trait = one_drop
	}
	
	option = {
		mother = {
			set_variable = { which = "baby_blood_level" value = 0 }
			clr_character_flag = flag_one_drop_baby
		}
	}
}

character_event = { # An auto cucking event
	id = one_drop.5
	hide_window = yes
	
	only_women = yes
	min_age = 16
	max_age = 45
	only_capable = yes
	is_sick = no
	
	trigger = {
		the_source = { is_alive = yes } # If the progenitor is dead, he can't cuck
		OR = {
			is_ruler = yes
			any_spouse = { is_ruler = yes }
			any_consort = { is_ruler = yes }
		}
		NOT = {
			any_child = {
				is_alive = yes
				trait = one_drop
				count = 3
			}
		}
		NOT = { is_pregnant = yes } # The unsafe cucking might be throwing our game off a bit
		
		# OR = { # If she's pregnant with someone else's child, we can still squeeze in there
			# AND = {
				# is_pregnant = yes
				# father_of_unborn = {
					# the_source = {
						# NOT = { character = PREV }
					# }
				# }
			# }
			# NOT = { is_pregnant = yes }
		# }
		
	}
	
	mean_time_to_happen = {
		months = 24
		
		modifier = { # Slow down the cucking if she already has some of your children
			factor = 1.5
			any_child = {
				is_alive = yes
				trait = one_drop
			}
		}
		
		modifier = {
			factor = 1.5
			any_child = {
				is_alive = yes
				trait = one_drop
				count = 2
			}
		}
		
		
		modifier = { # Speed up the cucking if she's good to go
			factor = 0.75
			OR = {
				any_spouse = {
					the_source = {
						character = PREV
					}
				}
				any_consort = {
					the_source = {
						character = PREV
					}
				}
			}
			NOT = {
				any_child = {
					is_alive = yes
					trait = one_drop
					count = 2
				}
			}
		}
	}
	
	option = { # Commands for wives and concubines
		trigger = {
			the_source = {
				OR = {
					any_spouse = { character = ROOT }
					any_consort = { character = ROOT }
				}
			}
		}
		the_source = { ROOT = { impregnate = PREV } }
		log = "Info: [This.GetBestName] ([This.GetID]) is getting a bun in the oven."
	}
	option = {
		trigger = { # Commands for unknown women
			the_source = {
				NOR = {
					any_spouse = { character = ROOT }
					any_consort = { character = ROOT }
				}
			}
		}
		the_source = { ROOT = { impregnate_cuckoo = PREV } }
		log = "Info: [This.GetBestName] ([This.GetID]) is getting a bagel in the oven."
	}
}
